apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: varnish
spec:
  replicas: 1
  selector:
    matchLabels:
      app: varnish-ingress
  template:
    metadata:
      labels:
        app: varnish-ingress
    spec:
      containers:
      - image: varnish-ingress/varnish
        imagePullPolicy: IfNotPresent
        name: varnish-ingress
        ports:
        - name: http
          containerPort: 80
        - name: k8s
          containerPort: 8000
        - name: varnishadm
          containerPort: 7000
        volumeMounts:
        - name: adm-secret
          mountPath: "/var/secret"
          readOnly: true
        - name: varnish-home
          mountPath: "/var/run/varnish-home"
        livenessProbe:
          exec:
            command:
            - /usr/bin/pgrep
            - -P
            - "0"
            - varnishd
        readinessProbe:
          httpGet:
            path: /ready
            port: k8s
        args:
          - -n
          - /var/run/varnish-home
        env:
        # Use the PROXY protocol (cf. proxy.yaml).
        - name: PROTO
          value: PROXY

        # Container port for the HTTP listener.
        # MUST match the value set for the http containerPort above, and
        # the http targetPort in the Service below.
        - name: HTTP_PORT
          value: "81"

        # Container port for the HTTP readiness check.
        # MUST match the value set for the k8s containerPort above.
        - name: READY_PORT
          value: "8000"

        # Container port for the admin listener.
        # MUST match the value set for the varnishadm containerPort above,
        # and the varnishadm targetPort in the Service below.
        - name: ADMIN_PORT
          value: "7000"

        # Path at which the volume for the admin secret is mounted.
        # MUST match the value of mountPath in volumeMounts above.
        - name: SECRET_PATH
          value: /var/secret

        # Name of the file containing the admin secret.
        # MUST match the value of path in volumes below.
        - name: SECRET_FILE
          value: adm.secret

      volumes:
      - name: adm-secret
        secret:
          secretName: adm-secret
          items:
          - key: admin
            path: adm.secret
      - name: varnish-home
        emptyDir:
          medium: "Memory"
---
apiVersion: v1
kind: Service
metadata:
  name: varnish-ingress
  labels:
    app: varnish-ingress
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: NodePort 
  ports:
  - port: 7000
    targetPort: 7000
    protocol: TCP
    name: varnishadm
  - port: 81
    targetPort: 81
    protocol: TCP
    name: http
  selector:
    app: varnish-ingress
  publishNotReadyAddresses: true
